#!/bin/bash
#Shell菜单演示
#变量"configpath"的路径根据实际情况修改
basepath=$(cd `dirname $0`; pwd)
function menu ()
{
 cat << EOF
----------------------------------------
|***************容器菜单***************|
----------------------------------------
`echo -e "\033[47;30m 可以在任意选择界面按"Ctrl+c"键退出\033[0m"`
`echo -e "\033[47;30m 某些功能需要选择容器后才能使用\033[0m"`
`echo -e "\033[47;30m 1)选择容器\033[0m"`
`echo -e "\033[47;30m 2)显示所有容器名字 状态\033[0m"`
`echo -e "\033[47;30m 3)查看容器log\033[0m"`
`echo -e "\033[47;30m 4)进入容器内部\033[0m"`
`echo -e "\033[47;30m 5)重新启动容器\033[0m"`
`echo -e "\033[47;30m 6)停止容器\033[0m"`
`echo -e "\033[47;30m 7)删除容器\033[0m"`
`echo -e "\033[47;30m 8)宿主和容器互相复制文件\033[0m"`
`echo -e "\033[47;30m 9)返回主菜单\033[0m"`
`echo -e "\033[47;30m 0)退出\033[0m"`
EOF
read -p "请输入功能对应的数字：" num1
while [ $num1 != '0' ];do
case $num1 in
 1)
   clear
   docker inspect -f='{{.Name}} {{.State.Status}}' $(docker ps -a -q)
   read -p "复制或输入容器名称:" container
   menu
   ;;
 2)
   clear
   docker inspect -f='{{.Name}} {{.State.Status}}' $(docker ps -a -q)
   menu
   ;;
 3)
   clear
   docker inspect -f='{{.Name}} {{.State.Status}}' $(docker ps -a -q)
   read -p "复制或输入容器名称:" container
   docker logs $container
   menu
   ;;
 4)
   clear
   docker exec -it $container /bin/bash 2 > /dev/null || docker exec -it $container /bin/sh
   menu
   ;;
 5)
   clear
   docker restart $container
   menu
   ;;
 6)
   clear
   docker stop $container
   menu
   ;;
 7)
   clear
   docker stop $container
   docker rm $container
   menu
   ;;
 8)
   clear
   echo -e "\033[47;30m 容器的路径格式为:"容器名称:绝对路径"\033[0m"
   echo -e "\033[47;30m 宿主的路径格式为:"绝对路径"\033[0m"
   echo -e "\033[47;30m 容器名称不能包含\\ \033[0m"
   read -p "输入源文件 目的文件" file
   docker cp $file
   echo "复制文件:" $file
 menu
  ;;
 9)
  clear
  $basepath/menu
  exit 0
  ;;
 0)
  exit 0
esac
done
}
menu
